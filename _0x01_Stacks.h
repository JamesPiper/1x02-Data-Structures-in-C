/////////////////////////////////////////////////////////////////////////////////////
// 2017.01.19 by James Piper, james@jamespiper.com
//
// Common code for Stacks.
//
//
/////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////
// User types.
/////////////////////////////////////////////////////////////////////////////////////
typedef struct _Stack {
	int Top;
	int S[SIZE_OF_ARRAY_STACK];
} Stack;

/////////////////////////////////////////////////////////////////////////////////////
// Function prototypes.
/////////////////////////////////////////////////////////////////////////////////////
void Push(Stack*, int);
int Pop(Stack*);
int Peek(Stack*);
Boolean IsEmpty(Stack*);
Boolean IsFull(Stack*);
Boolean IsDigit(char);

/////////////////////////////////////////////////////////////////////////////////////
// Functions.
/////////////////////////////////////////////////////////////////////////////////////
void Push(Stack* Stack, int item) {
	Stack->S[++Stack->Top] = item;
}

int Pop(Stack* Stack) {
	return Stack->S[Stack->Top--];
}

int Peek(Stack* Stack) {
	return Stack->S[Stack->Top];
}

Boolean IsEmpty(Stack* Stack) {
	if (Stack->Top == -1)
		return True;
	else
		return False;
}

Boolean IsFull(Stack* Stack) {
	if (Stack->Top == SIZE_OF_ARRAY_STACK - 1)
		return True;
	else
 		return False;
}

Boolean IsDigit(char item) {
	if (item >= '0' && item <= '9')
		return True;
	else
		return False;
}
